---
- name: Download and extract elasticsearch
  ansible.builtin.unarchive:
    src: https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{{ elasticsearch_version }}-{{ unames.stdout | lower }}-{{ unamem.stdout }}.tar.gz
    dest: "{{ elasticsearch_extract_dir }}"
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
    remote_src: yes
  when: 
    - elasticsearch_install_mode == 'http'
- ansible.builtin.fail:
    msg: elasticsearch_install_mode set to local but no elasticsearch_local_tar_path specified
  when:
    - elasticsearch_install_mode == 'local'
    - elasticsearch_local_tar_path == ''
- name: Extract elasticsearch
  ansible.builtin.unarchive:
    src: "{{ elasticsearch_local_tar_path }}/elasticsearch-{{ elasticsearch_version }}-{{ unames.stdout | lower }}-{{ unamem.stdout }}.tar.gz"
    dest: "{{ elasticsearch_extract_dir }}"
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
  when: 
    - elasticsearch_install_mode == 'local'
- name: Fix directory permission
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
    recurse: yes
    mode: u=rwX,g=rX,o-rwx
  loop:
    - "{{ elasticsearch_extract_dir }}/elasticsearch-{{ elasticsearch_version }}"
    - "{{ elasticsearch_data_dir }}"
    - "{{ elasticsearch_log_dir }}"
    - "{{ elasticsearch_pid_dir }}"
    - "{{ elasticsearch_conf_dir }}"
    - "{{ elasticsearch_certs_dir}}"
- name: create symlink to elasticsearch
  ansible.builtin.file:
    src: "{{ elasticsearch_extract_dir }}/elasticsearch-{{ elasticsearch_version }}"
    dest: "{{ elasticsearch_extract_dir }}/elasticsearch"
    state: link
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"